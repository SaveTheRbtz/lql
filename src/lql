#!/usr/bin/env python
# vim:fileencoding=utf8

from alp.utils.common import attention
from alp.utils.getopt import getopt
from alp.apache.log_parser import LogEntries
from alp.lql.parser import Parser
from alp.lql.query import Query
from alp.errors import *

import logging as log

def main():
    """Simple pipeline:
        * Parse command line
        * Parse logfile
        * Parse query
        * Execute query
        * Output the result
    """
    #
    # Parse command line
    #
    parser = getopt()
    options, query_list = parser.parse_args()

    if options.verbose:
        log.basicConfig(level=log.DEBUG)
    else:
        log.basicConfig(level=log.WARNING)

    if len(query_list) > 1:
        raise ALPLQLParserError("Multiple queries are unsupported by now (Did you forgot to wrap query with quotes?)")
    elif not query_list:
        parser.print_help()
        exit(2)

    #
    # Parse logfile
    #
    entries = LogEntries.from_file(options.filename)

    #
    # Parse query
    #
    query_string, = query_list
    query = Query(query_string)

    #
    # Execute query
    #
    results = query.execute(entries)

    #
    # Output the result
    #
    for result in results:
        if result:
            print repr(result)

if __name__ == '__main__':
    if __debug__:
        import pdb

    try: 
        main()
    # Another way to do it is to override sys.excepthook
    except ALPError as e:
        if isinstance(e, ALPApacheImportError):
            with attention():
                log.critical("Can't import log from given file.")
        elif isinstance(e, ALPLQLParserError):
            with attention():
                log.critical("Query parsing failed. Please consult to manual.")
        elif isinstance(e, ALPLQLExecutionError):
            with attention():
                log.critical("Can't execute provided query.")
        else:
            with attention():
                log.critical("Known, but unhandled error was raised. This may be a bug. Show it ot SaveTheRbtz@:")
        raise
    except Exception:
        with attention():
            log.critical("Oh. Impossible happened! Please show this miracle to SaveTheRbtz@:")
        raise
